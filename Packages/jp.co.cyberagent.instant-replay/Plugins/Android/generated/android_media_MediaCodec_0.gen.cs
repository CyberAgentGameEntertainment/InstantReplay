// --------------------------------------------------------------
// Copyright 2025 CyberAgent, Inc.
// --------------------------------------------------------------

// <auto-generated />
#nullable enable
#pragma warning disable CS0108
#pragma warning disable CS0162
#pragma warning disable CS0114
using global::System.Linq;
namespace @android.@media
{
public partial interface @MediaCodec : global::@java.@lang.@Object
{
    private static nint __ABG__Class_backingField;
    internal static nint __ABG__Class
    {
        get
        {
            var existing = __ABG__Class_backingField; 
            if (existing != 0) return existing;
        
            var ptr = global::UnityEngine.AndroidJNI.NewGlobalRef(global::UnityEngine.AndroidJNI.FindClass(@"android/media/MediaCodec"));
            existing = global::System.Threading.Interlocked.CompareExchange(ref __ABG__Class_backingField, ptr, (nint)0);
            if (existing != (nint)0)
            {
                global::UnityEngine.AndroidJNI.DeleteGlobalRef(ptr);
                return existing;
            }
            return ptr;
        }
    }

    private static nint p___ABG__Class_createByCodecName_0;

    /// <summary>
    ///     createByCodecName
    /// </summary>
    /// <param name="@name">value of @name</param>
    /// <returns>value of @android.@media.@MediaCodec</returns>
    public static @android.@media.@MediaCodec? @createByCodecName(string? @name)
    {
        if (p___ABG__Class_createByCodecName_0 == (nint)0) p___ABG__Class_createByCodecName_0 = global::UnityEngine.AndroidJNI.GetStaticMethodID(@android.@media.@MediaCodec.__ABG__Class, @"createByCodecName", @"(Ljava/lang/String;)Landroid/media/MediaCodec;");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = stackalloc UnityEngine.jvalue[1];
        try
        {
            __ABG__args[0] = new global::UnityEngine.jvalue() { l = global::UnityEngine.AndroidJNI.NewString(@name) };
            return @android.@media.@MediaCodec.UnsafeFromRawObjectAndDeleteLocalRef(global::UnityEngine.AndroidJNI.CallStaticObjectMethod(@android.@media.@MediaCodec.__ABG__Class, p___ABG__Class_createByCodecName_0, __ABG__args));
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }
    private static nint p___ABG__Class_BUFFER_FLAG_END_OF_STREAM_0;
    public static int get_BUFFER_FLAG_END_OF_STREAM()
    {
        if (p___ABG__Class_BUFFER_FLAG_END_OF_STREAM_0 == (nint)0) p___ABG__Class_BUFFER_FLAG_END_OF_STREAM_0 = global::UnityEngine.AndroidJNI.GetStaticFieldID(@android.@media.@MediaCodec.__ABG__Class, @"BUFFER_FLAG_END_OF_STREAM", @"I");
        return global::UnityEngine.AndroidJNI.GetStaticIntField(@android.@media.@MediaCodec.__ABG__Class, p___ABG__Class_BUFFER_FLAG_END_OF_STREAM_0);
    }
    private static nint p___ABG__Class_CONFIGURE_FLAG_ENCODE_0;
    public static int get_CONFIGURE_FLAG_ENCODE()
    {
        if (p___ABG__Class_CONFIGURE_FLAG_ENCODE_0 == (nint)0) p___ABG__Class_CONFIGURE_FLAG_ENCODE_0 = global::UnityEngine.AndroidJNI.GetStaticFieldID(@android.@media.@MediaCodec.__ABG__Class, @"CONFIGURE_FLAG_ENCODE", @"I");
        return global::UnityEngine.AndroidJNI.GetStaticIntField(@android.@media.@MediaCodec.__ABG__Class, p___ABG__Class_CONFIGURE_FLAG_ENCODE_0);
    }
    private static nint p___ABG__Class_INFO_OUTPUT_FORMAT_CHANGED_0;
    public static int get_INFO_OUTPUT_FORMAT_CHANGED()
    {
        if (p___ABG__Class_INFO_OUTPUT_FORMAT_CHANGED_0 == (nint)0) p___ABG__Class_INFO_OUTPUT_FORMAT_CHANGED_0 = global::UnityEngine.AndroidJNI.GetStaticFieldID(@android.@media.@MediaCodec.__ABG__Class, @"INFO_OUTPUT_FORMAT_CHANGED", @"I");
        return global::UnityEngine.AndroidJNI.GetStaticIntField(@android.@media.@MediaCodec.__ABG__Class, p___ABG__Class_INFO_OUTPUT_FORMAT_CHANGED_0);
    }
    private static nint p___ABG__Class_INFO_TRY_AGAIN_LATER_0;
    public static int get_INFO_TRY_AGAIN_LATER()
    {
        if (p___ABG__Class_INFO_TRY_AGAIN_LATER_0 == (nint)0) p___ABG__Class_INFO_TRY_AGAIN_LATER_0 = global::UnityEngine.AndroidJNI.GetStaticFieldID(@android.@media.@MediaCodec.__ABG__Class, @"INFO_TRY_AGAIN_LATER", @"I");
        return global::UnityEngine.AndroidJNI.GetStaticIntField(@android.@media.@MediaCodec.__ABG__Class, p___ABG__Class_INFO_TRY_AGAIN_LATER_0);
    }
    public static @MediaCodec? UnsafeFromRawObjectAndDeleteLocalRef(nint rawObject)
    {
        if (rawObject == (nint)0) return null;
        try
        {
            return new @__ABG__Anonymous(rawObject);
        }
        finally
        {
            global::UnityEngine.AndroidJNI.DeleteLocalRef(rawObject);
        }
    }

    public static @MediaCodec? UnsafeFromRawObject(nint rawObject)
    {
        if (rawObject == (nint)0) return null;
        return new @__ABG__Anonymous(rawObject);
    }

    public static @MediaCodec? FromRawObject(nint rawObject)
    {
        if (rawObject == (nint)0) return null;
        return !global::UnityEngine.AndroidJNI.IsAssignableFrom(global::UnityEngine.AndroidJNI.GetObjectClass(rawObject), __ABG__Class) ? null : new @__ABG__Anonymous(rawObject);
    }

    public static @MediaCodec? FromRawObject(global::AndroidBindgen.IAndroidJavaObject source) => source != null ? FromRawObject(source.GetRawObject()) : null;
internal class __ABG__Anonymous :  global::@java.@lang.@Object.__ABG__Anonymous, @MediaCodec
{
    internal @__ABG__Anonymous(nint rawObject) : base(rawObject) { }
}
}
}
namespace android.media
{
public static partial class BindingExtensions
{

    private static nint p___ABG__Class_release_0;

    /// <summary>
    ///     release
    /// </summary>
    public static void @release(this @android.@media.@MediaCodec @this)
    {
        if (p___ABG__Class_release_0 == (nint)0) p___ABG__Class_release_0 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaCodec.__ABG__Class, @"release", @"()V");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = global::System.Span<global::UnityEngine.jvalue>.Empty;
        try
        {
            global::UnityEngine.AndroidJNI.CallVoidMethod(@this.GetRawObject(), p___ABG__Class_release_0, __ABG__args);
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }

    private static nint p___ABG__Class_configure_0;

    /// <summary>
    ///     configure
    /// </summary>
    /// <param name="@format">value of @format</param>
    /// <param name="@surface">value of @surface</param>
    /// <param name="@crypto">value of @crypto</param>
    /// <param name="@flags">value of @flags</param>
    public static void @configure(this @android.@media.@MediaCodec @this, @android.@media.@MediaFormat @format, @android.@view.@Surface @surface, @android.@media.@MediaCrypto @crypto, int @flags)
    {
        if (p___ABG__Class_configure_0 == (nint)0) p___ABG__Class_configure_0 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaCodec.__ABG__Class, @"configure", @"(Landroid/media/MediaFormat;Landroid/view/Surface;Landroid/media/MediaCrypto;I)V");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = stackalloc UnityEngine.jvalue[4];
        try
        {
            __ABG__args[0] = new global::UnityEngine.jvalue() { l = @format?.GetRawObject() ?? global::System.IntPtr.Zero };
            __ABG__args[1] = new global::UnityEngine.jvalue() { l = @surface?.GetRawObject() ?? global::System.IntPtr.Zero };
            __ABG__args[2] = new global::UnityEngine.jvalue() { l = @crypto?.GetRawObject() ?? global::System.IntPtr.Zero };
            __ABG__args[3] = new global::UnityEngine.jvalue() { i = @flags };
            global::UnityEngine.AndroidJNI.CallVoidMethod(@this.GetRawObject(), p___ABG__Class_configure_0, __ABG__args);
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }

    private static nint p___ABG__Class_start_0;

    /// <summary>
    ///     start
    /// </summary>
    public static void @start(this @android.@media.@MediaCodec @this)
    {
        if (p___ABG__Class_start_0 == (nint)0) p___ABG__Class_start_0 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaCodec.__ABG__Class, @"start", @"()V");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = global::System.Span<global::UnityEngine.jvalue>.Empty;
        try
        {
            global::UnityEngine.AndroidJNI.CallVoidMethod(@this.GetRawObject(), p___ABG__Class_start_0, __ABG__args);
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }

    private static nint p___ABG__Class_stop_0;

    /// <summary>
    ///     stop
    /// </summary>
    public static void @stop(this @android.@media.@MediaCodec @this)
    {
        if (p___ABG__Class_stop_0 == (nint)0) p___ABG__Class_stop_0 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaCodec.__ABG__Class, @"stop", @"()V");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = global::System.Span<global::UnityEngine.jvalue>.Empty;
        try
        {
            global::UnityEngine.AndroidJNI.CallVoidMethod(@this.GetRawObject(), p___ABG__Class_stop_0, __ABG__args);
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }

    private static nint p___ABG__Class_queueInputBuffer_0;

    /// <summary>
    ///     queueInputBuffer
    /// </summary>
    /// <param name="@index">value of @index</param>
    /// <param name="@offset">value of @offset</param>
    /// <param name="@size">value of @size</param>
    /// <param name="@presentationTimeUs">value of @presentationTimeUs</param>
    /// <param name="@flags">value of @flags</param>
    public static void @queueInputBuffer(this @android.@media.@MediaCodec @this, int @index, int @offset, int @size, long @presentationTimeUs, int @flags)
    {
        if (p___ABG__Class_queueInputBuffer_0 == (nint)0) p___ABG__Class_queueInputBuffer_0 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaCodec.__ABG__Class, @"queueInputBuffer", @"(IIIJI)V");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = stackalloc UnityEngine.jvalue[5];
        try
        {
            __ABG__args[0] = new global::UnityEngine.jvalue() { i = @index };
            __ABG__args[1] = new global::UnityEngine.jvalue() { i = @offset };
            __ABG__args[2] = new global::UnityEngine.jvalue() { i = @size };
            __ABG__args[3] = new global::UnityEngine.jvalue() { j = @presentationTimeUs };
            __ABG__args[4] = new global::UnityEngine.jvalue() { i = @flags };
            global::UnityEngine.AndroidJNI.CallVoidMethod(@this.GetRawObject(), p___ABG__Class_queueInputBuffer_0, __ABG__args);
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }

    private static nint p___ABG__Class_dequeueInputBuffer_0;

    /// <summary>
    ///     dequeueInputBuffer
    /// </summary>
    /// <param name="@timeoutUs">value of @timeoutUs</param>
    /// <returns>value of int</returns>
    public static int @dequeueInputBuffer(this @android.@media.@MediaCodec @this, long @timeoutUs)
    {
        if (p___ABG__Class_dequeueInputBuffer_0 == (nint)0) p___ABG__Class_dequeueInputBuffer_0 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaCodec.__ABG__Class, @"dequeueInputBuffer", @"(J)I");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = stackalloc UnityEngine.jvalue[1];
        try
        {
            __ABG__args[0] = new global::UnityEngine.jvalue() { j = @timeoutUs };
            return global::UnityEngine.AndroidJNI.CallIntMethod(@this.GetRawObject(), p___ABG__Class_dequeueInputBuffer_0, __ABG__args);
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }

    private static nint p___ABG__Class_dequeueOutputBuffer_0;

    /// <summary>
    ///     dequeueOutputBuffer
    /// </summary>
    /// <param name="@info">value of @info</param>
    /// <param name="@timeoutUs">value of @timeoutUs</param>
    /// <returns>value of int</returns>
    public static int @dequeueOutputBuffer(this @android.@media.@MediaCodec @this, @android.@media.@MediaCodec.@BufferInfo? @info, long @timeoutUs)
    {
        if (p___ABG__Class_dequeueOutputBuffer_0 == (nint)0) p___ABG__Class_dequeueOutputBuffer_0 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaCodec.__ABG__Class, @"dequeueOutputBuffer", @"(Landroid/media/MediaCodec$BufferInfo;J)I");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = stackalloc UnityEngine.jvalue[2];
        try
        {
            __ABG__args[0] = new global::UnityEngine.jvalue() { l = @info?.GetRawObject() ?? global::System.IntPtr.Zero };
            __ABG__args[1] = new global::UnityEngine.jvalue() { j = @timeoutUs };
            return global::UnityEngine.AndroidJNI.CallIntMethod(@this.GetRawObject(), p___ABG__Class_dequeueOutputBuffer_0, __ABG__args);
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }

    private static nint p___ABG__Class_releaseOutputBuffer_0;

    /// <summary>
    ///     releaseOutputBuffer
    /// </summary>
    /// <param name="@index">value of @index</param>
    /// <param name="@render">value of @render</param>
    public static void @releaseOutputBuffer(this @android.@media.@MediaCodec @this, int @index, bool @render)
    {
        if (p___ABG__Class_releaseOutputBuffer_0 == (nint)0) p___ABG__Class_releaseOutputBuffer_0 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaCodec.__ABG__Class, @"releaseOutputBuffer", @"(IZ)V");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = stackalloc UnityEngine.jvalue[2];
        try
        {
            __ABG__args[0] = new global::UnityEngine.jvalue() { i = @index };
            __ABG__args[1] = new global::UnityEngine.jvalue() { z = @render };
            global::UnityEngine.AndroidJNI.CallVoidMethod(@this.GetRawObject(), p___ABG__Class_releaseOutputBuffer_0, __ABG__args);
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }

    private static nint p___ABG__Class_getOutputFormat_0;

    /// <summary>
    ///     getOutputFormat
    /// </summary>
    /// <returns>value of @android.@media.@MediaFormat</returns>
    public static @android.@media.@MediaFormat? @getOutputFormat(this @android.@media.@MediaCodec @this)
    {
        if (p___ABG__Class_getOutputFormat_0 == (nint)0) p___ABG__Class_getOutputFormat_0 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaCodec.__ABG__Class, @"getOutputFormat", @"()Landroid/media/MediaFormat;");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = global::System.Span<global::UnityEngine.jvalue>.Empty;
        try
        {
            return @android.@media.@MediaFormat.UnsafeFromRawObjectAndDeleteLocalRef(global::UnityEngine.AndroidJNI.CallObjectMethod(@this.GetRawObject(), p___ABG__Class_getOutputFormat_0, __ABG__args));
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }

    private static nint p___ABG__Class_getInputFormat_0;

    /// <summary>
    ///     getInputFormat
    /// </summary>
    /// <returns>value of @android.@media.@MediaFormat</returns>
    public static @android.@media.@MediaFormat? @getInputFormat(this @android.@media.@MediaCodec @this)
    {
        if (p___ABG__Class_getInputFormat_0 == (nint)0) p___ABG__Class_getInputFormat_0 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaCodec.__ABG__Class, @"getInputFormat", @"()Landroid/media/MediaFormat;");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = global::System.Span<global::UnityEngine.jvalue>.Empty;
        try
        {
            return @android.@media.@MediaFormat.UnsafeFromRawObjectAndDeleteLocalRef(global::UnityEngine.AndroidJNI.CallObjectMethod(@this.GetRawObject(), p___ABG__Class_getInputFormat_0, __ABG__args));
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }

    private static nint p___ABG__Class_getInputBuffer_0;

    /// <summary>
    ///     getInputBuffer
    /// </summary>
    /// <param name="@index">value of @index</param>
    /// <returns>value of @java.@nio.@ByteBuffer</returns>
    public static @java.@nio.@ByteBuffer? @getInputBuffer(this @android.@media.@MediaCodec @this, int @index)
    {
        if (p___ABG__Class_getInputBuffer_0 == (nint)0) p___ABG__Class_getInputBuffer_0 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaCodec.__ABG__Class, @"getInputBuffer", @"(I)Ljava/nio/ByteBuffer;");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = stackalloc UnityEngine.jvalue[1];
        try
        {
            __ABG__args[0] = new global::UnityEngine.jvalue() { i = @index };
            return @java.@nio.@ByteBuffer.UnsafeFromRawObjectAndDeleteLocalRef(global::UnityEngine.AndroidJNI.CallObjectMethod(@this.GetRawObject(), p___ABG__Class_getInputBuffer_0, __ABG__args));
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }

    private static nint p___ABG__Class_getInputImage_0;

    /// <summary>
    ///     getInputImage
    /// </summary>
    /// <param name="@index">value of @index</param>
    /// <returns>value of @android.@media.@Image</returns>
    public static @android.@media.@Image? @getInputImage(this @android.@media.@MediaCodec @this, int @index)
    {
        if (p___ABG__Class_getInputImage_0 == (nint)0) p___ABG__Class_getInputImage_0 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaCodec.__ABG__Class, @"getInputImage", @"(I)Landroid/media/Image;");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = stackalloc UnityEngine.jvalue[1];
        try
        {
            __ABG__args[0] = new global::UnityEngine.jvalue() { i = @index };
            return @android.@media.@Image.UnsafeFromRawObjectAndDeleteLocalRef(global::UnityEngine.AndroidJNI.CallObjectMethod(@this.GetRawObject(), p___ABG__Class_getInputImage_0, __ABG__args));
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }

    private static nint p___ABG__Class_getOutputBuffer_0;

    /// <summary>
    ///     getOutputBuffer
    /// </summary>
    /// <param name="@index">value of @index</param>
    /// <returns>value of @java.@nio.@ByteBuffer</returns>
    public static @java.@nio.@ByteBuffer? @getOutputBuffer(this @android.@media.@MediaCodec @this, int @index)
    {
        if (p___ABG__Class_getOutputBuffer_0 == (nint)0) p___ABG__Class_getOutputBuffer_0 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaCodec.__ABG__Class, @"getOutputBuffer", @"(I)Ljava/nio/ByteBuffer;");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = stackalloc UnityEngine.jvalue[1];
        try
        {
            __ABG__args[0] = new global::UnityEngine.jvalue() { i = @index };
            return @java.@nio.@ByteBuffer.UnsafeFromRawObjectAndDeleteLocalRef(global::UnityEngine.AndroidJNI.CallObjectMethod(@this.GetRawObject(), p___ABG__Class_getOutputBuffer_0, __ABG__args));
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }
}
}

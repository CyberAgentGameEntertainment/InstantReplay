// --------------------------------------------------------------
// Copyright 2025 CyberAgent, Inc.
// --------------------------------------------------------------

// <auto-generated />
#nullable enable
#pragma warning disable CS0108
#pragma warning disable CS0162
#pragma warning disable CS0114
using global::System.Linq;
namespace @android.@media
{
public partial interface @MediaCodecInfo : global::@java.@lang.@Object
{
    private static nint __ABG__Class_backingField;
    internal static nint __ABG__Class
    {
        get
        {
            var existing = __ABG__Class_backingField; 
            if (existing != 0) return existing;
        
            var ptr = global::UnityEngine.AndroidJNI.NewGlobalRef(global::UnityEngine.AndroidJNI.FindClass(@"android/media/MediaCodecInfo"));
            existing = global::System.Threading.Interlocked.CompareExchange(ref __ABG__Class_backingField, ptr, (nint)0);
            if (existing != (nint)0)
            {
                global::UnityEngine.AndroidJNI.DeleteGlobalRef(ptr);
                return existing;
            }
            return ptr;
        }
    }
    public static @MediaCodecInfo? UnsafeFromRawObjectAndDeleteLocalRef(nint rawObject)
    {
        if (rawObject == (nint)0) return null;
        try
        {
            return new @__ABG__Anonymous(rawObject);
        }
        finally
        {
            global::UnityEngine.AndroidJNI.DeleteLocalRef(rawObject);
        }
    }

    public static @MediaCodecInfo? UnsafeFromRawObject(nint rawObject)
    {
        if (rawObject == (nint)0) return null;
        return new @__ABG__Anonymous(rawObject);
    }

    public static @MediaCodecInfo? FromRawObject(nint rawObject)
    {
        if (rawObject == (nint)0) return null;
        return !global::UnityEngine.AndroidJNI.IsAssignableFrom(global::UnityEngine.AndroidJNI.GetObjectClass(rawObject), __ABG__Class) ? null : new @__ABG__Anonymous(rawObject);
    }

    public static @MediaCodecInfo? FromRawObject(global::AndroidBindgen.IAndroidJavaObject source) => source != null ? FromRawObject(source.GetRawObject()) : null;
internal class __ABG__Anonymous :  global::@java.@lang.@Object.__ABG__Anonymous, @MediaCodecInfo
{
    internal @__ABG__Anonymous(nint rawObject) : base(rawObject) { }
}
}
}
namespace android.media
{
public static partial class BindingExtensions
{

    private static nint p___ABG__Class_getName_0;

    /// <summary>
    ///     getName
    /// </summary>
    /// <returns>value of string</returns>
    public static string? @getName(this @android.@media.@MediaCodecInfo @this)
    {
        if (p___ABG__Class_getName_0 == (nint)0) p___ABG__Class_getName_0 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaCodecInfo.__ABG__Class, @"getName", @"()Ljava/lang/String;");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = global::System.Span<global::UnityEngine.jvalue>.Empty;
        try
        {
            return global::UnityEngine.AndroidJNI.CallStringMethod(@this.GetRawObject(), p___ABG__Class_getName_0, __ABG__args);
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }

    private static nint p___ABG__Class_isEncoder_0;

    /// <summary>
    ///     isEncoder
    /// </summary>
    /// <returns>value of bool</returns>
    public static bool @isEncoder(this @android.@media.@MediaCodecInfo @this)
    {
        if (p___ABG__Class_isEncoder_0 == (nint)0) p___ABG__Class_isEncoder_0 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaCodecInfo.__ABG__Class, @"isEncoder", @"()Z");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = global::System.Span<global::UnityEngine.jvalue>.Empty;
        try
        {
            return global::UnityEngine.AndroidJNI.CallBooleanMethod(@this.GetRawObject(), p___ABG__Class_isEncoder_0, __ABG__args);
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }

    private static nint p___ABG__Class_isHardwareAccelerated_0;

    /// <summary>
    ///     isHardwareAccelerated
    /// </summary>
    /// <returns>value of bool</returns>
    public static bool @isHardwareAccelerated(this @android.@media.@MediaCodecInfo @this)
    {
        if (p___ABG__Class_isHardwareAccelerated_0 == (nint)0) p___ABG__Class_isHardwareAccelerated_0 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaCodecInfo.__ABG__Class, @"isHardwareAccelerated", @"()Z");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = global::System.Span<global::UnityEngine.jvalue>.Empty;
        try
        {
            return global::UnityEngine.AndroidJNI.CallBooleanMethod(@this.GetRawObject(), p___ABG__Class_isHardwareAccelerated_0, __ABG__args);
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }

    private static nint p___ABG__Class_getSupportedTypes_0;

    /// <summary>
    ///     getSupportedTypes
    /// </summary>
    /// <returns>value of string[]</returns>
    public static string?[]? @getSupportedTypes(this @android.@media.@MediaCodecInfo @this)
    {
        if (p___ABG__Class_getSupportedTypes_0 == (nint)0) p___ABG__Class_getSupportedTypes_0 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaCodecInfo.__ABG__Class, @"getSupportedTypes", @"()[Ljava/lang/String;");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = global::System.Span<global::UnityEngine.jvalue>.Empty;
        try
        {
            return global::AndroidBindgen.AndroidJNIEx.FromObjectArray(global::UnityEngine.AndroidJNI.CallObjectMethod(@this.GetRawObject(), p___ABG__Class_getSupportedTypes_0, __ABG__args))?.Select(ptr => global::UnityEngine.AndroidJNI.GetStringUTFChars(ptr))?.ToArray();
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }

    private static nint p___ABG__Class_getCapabilitiesForType_0;

    /// <summary>
    ///     getCapabilitiesForType
    /// </summary>
    /// <param name="@type">value of @type</param>
    /// <returns>value of @android.@media.@MediaCodecInfo.@CodecCapabilities</returns>
    public static @android.@media.@MediaCodecInfo.@CodecCapabilities? @getCapabilitiesForType(this @android.@media.@MediaCodecInfo @this, string? @type)
    {
        if (p___ABG__Class_getCapabilitiesForType_0 == (nint)0) p___ABG__Class_getCapabilitiesForType_0 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaCodecInfo.__ABG__Class, @"getCapabilitiesForType", @"(Ljava/lang/String;)Landroid/media/MediaCodecInfo$CodecCapabilities;");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = stackalloc UnityEngine.jvalue[1];
        try
        {
            __ABG__args[0] = new global::UnityEngine.jvalue() { l = global::UnityEngine.AndroidJNI.NewString(@type) };
            return @android.@media.@MediaCodecInfo.@CodecCapabilities.UnsafeFromRawObjectAndDeleteLocalRef(global::UnityEngine.AndroidJNI.CallObjectMethod(@this.GetRawObject(), p___ABG__Class_getCapabilitiesForType_0, __ABG__args));
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }
}
}

// --------------------------------------------------------------
// Copyright 2025 CyberAgent, Inc.
// --------------------------------------------------------------

// <auto-generated />
#nullable enable
#pragma warning disable CS0108
#pragma warning disable CS0162
#pragma warning disable CS0114
using global::System.Linq;
namespace @android.@media
{
public partial interface @MediaMuxer : global::@java.@lang.@Object
{
    private static nint __ABG__Class_backingField;
    internal static nint __ABG__Class
    {
        get
        {
            var existing = __ABG__Class_backingField; 
            if (existing != 0) return existing;
        
            var ptr = global::UnityEngine.AndroidJNI.NewGlobalRef(global::UnityEngine.AndroidJNI.FindClass(@"android/media/MediaMuxer"));
            existing = global::System.Threading.Interlocked.CompareExchange(ref __ABG__Class_backingField, ptr, (nint)0);
            if (existing != (nint)0)
            {
                global::UnityEngine.AndroidJNI.DeleteGlobalRef(ptr);
                return existing;
            }
            return ptr;
        }
    }

    private static nint p___ABG__Class___init___2;

    /// <summary>
    ///     __init__
    /// </summary>
    /// <param name="@path">value of @path</param>
    /// <param name="@format">value of @format</param>
    public static @MediaMuxer New(string? @path, int @format)
    {
        var @this = @MediaMuxer.UnsafeFromRawObjectAndDeleteLocalRef(global::UnityEngine.AndroidJNI.AllocObject(@android.@media.@MediaMuxer.__ABG__Class)) ?? throw new global::System.InvalidOperationException();
        if (p___ABG__Class___init___2 == (nint)0) p___ABG__Class___init___2 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaMuxer.__ABG__Class, @"<init>", @"(Ljava/lang/String;I)V");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = stackalloc UnityEngine.jvalue[2];
        try
        {
            __ABG__args[0] = new global::UnityEngine.jvalue() { l = global::UnityEngine.AndroidJNI.NewString(@path) };
            __ABG__args[1] = new global::UnityEngine.jvalue() { i = @format };
            global::UnityEngine.AndroidJNI.CallVoidMethod(@this.GetRawObject(), p___ABG__Class___init___2, __ABG__args);
            return @this;
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }
    public static @MediaMuxer? UnsafeFromRawObjectAndDeleteLocalRef(nint rawObject)
    {
        if (rawObject == (nint)0) return null;
        try
        {
            return new @__ABG__Anonymous(rawObject);
        }
        finally
        {
            global::UnityEngine.AndroidJNI.DeleteLocalRef(rawObject);
        }
    }

    public static @MediaMuxer? UnsafeFromRawObject(nint rawObject)
    {
        if (rawObject == (nint)0) return null;
        return new @__ABG__Anonymous(rawObject);
    }

    public static @MediaMuxer? FromRawObject(nint rawObject)
    {
        if (rawObject == (nint)0) return null;
        return !global::UnityEngine.AndroidJNI.IsAssignableFrom(global::UnityEngine.AndroidJNI.GetObjectClass(rawObject), __ABG__Class) ? null : new @__ABG__Anonymous(rawObject);
    }

    public static @MediaMuxer? FromRawObject(global::AndroidBindgen.IAndroidJavaObject source) => source != null ? FromRawObject(source.GetRawObject()) : null;
internal class __ABG__Anonymous :  global::@java.@lang.@Object.__ABG__Anonymous, @MediaMuxer
{
    internal @__ABG__Anonymous(nint rawObject) : base(rawObject) { }
}
}
}
namespace android.media
{
public static partial class BindingExtensions
{

    private static nint p___ABG__Class_start_1;

    /// <summary>
    ///     start
    /// </summary>
    public static void @start(this @android.@media.@MediaMuxer @this)
    {
        if (p___ABG__Class_start_1 == (nint)0) p___ABG__Class_start_1 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaMuxer.__ABG__Class, @"start", @"()V");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = global::System.Span<global::UnityEngine.jvalue>.Empty;
        try
        {
            global::UnityEngine.AndroidJNI.CallVoidMethod(@this.GetRawObject(), p___ABG__Class_start_1, __ABG__args);
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }

    private static nint p___ABG__Class_stop_1;

    /// <summary>
    ///     stop
    /// </summary>
    public static void @stop(this @android.@media.@MediaMuxer @this)
    {
        if (p___ABG__Class_stop_1 == (nint)0) p___ABG__Class_stop_1 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaMuxer.__ABG__Class, @"stop", @"()V");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = global::System.Span<global::UnityEngine.jvalue>.Empty;
        try
        {
            global::UnityEngine.AndroidJNI.CallVoidMethod(@this.GetRawObject(), p___ABG__Class_stop_1, __ABG__args);
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }

    private static nint p___ABG__Class_addTrack_0;

    /// <summary>
    ///     addTrack
    /// </summary>
    /// <param name="@format">value of @format</param>
    /// <returns>value of int</returns>
    public static int @addTrack(this @android.@media.@MediaMuxer @this, @android.@media.@MediaFormat? @format)
    {
        if (p___ABG__Class_addTrack_0 == (nint)0) p___ABG__Class_addTrack_0 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaMuxer.__ABG__Class, @"addTrack", @"(Landroid/media/MediaFormat;)I");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = stackalloc UnityEngine.jvalue[1];
        try
        {
            __ABG__args[0] = new global::UnityEngine.jvalue() { l = @format?.GetRawObject() ?? global::System.IntPtr.Zero };
            return global::UnityEngine.AndroidJNI.CallIntMethod(@this.GetRawObject(), p___ABG__Class_addTrack_0, __ABG__args);
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }

    private static nint p___ABG__Class_writeSampleData_0;

    /// <summary>
    ///     writeSampleData
    /// </summary>
    /// <param name="@trackIndex">value of @trackIndex</param>
    /// <param name="@byteBuf">value of @byteBuf</param>
    /// <param name="@bufferInfo">value of @bufferInfo</param>
    public static void @writeSampleData(this @android.@media.@MediaMuxer @this, int @trackIndex, @java.@nio.@ByteBuffer? @byteBuf, @android.@media.@MediaCodec.@BufferInfo? @bufferInfo)
    {
        if (p___ABG__Class_writeSampleData_0 == (nint)0) p___ABG__Class_writeSampleData_0 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaMuxer.__ABG__Class, @"writeSampleData", @"(ILjava/nio/ByteBuffer;Landroid/media/MediaCodec$BufferInfo;)V");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = stackalloc UnityEngine.jvalue[3];
        try
        {
            __ABG__args[0] = new global::UnityEngine.jvalue() { i = @trackIndex };
            __ABG__args[1] = new global::UnityEngine.jvalue() { l = @byteBuf?.GetRawObject() ?? global::System.IntPtr.Zero };
            __ABG__args[2] = new global::UnityEngine.jvalue() { l = @bufferInfo?.GetRawObject() ?? global::System.IntPtr.Zero };
            global::UnityEngine.AndroidJNI.CallVoidMethod(@this.GetRawObject(), p___ABG__Class_writeSampleData_0, __ABG__args);
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }

    private static nint p___ABG__Class_release_1;

    /// <summary>
    ///     release
    /// </summary>
    public static void @release(this @android.@media.@MediaMuxer @this)
    {
        if (p___ABG__Class_release_1 == (nint)0) p___ABG__Class_release_1 = global::UnityEngine.AndroidJNI.GetMethodID(@android.@media.@MediaMuxer.__ABG__Class, @"release", @"()V");
        global::System.Span<global::UnityEngine.jvalue> __ABG__args = global::System.Span<global::UnityEngine.jvalue>.Empty;
        try
        {
            global::UnityEngine.AndroidJNI.CallVoidMethod(@this.GetRawObject(), p___ABG__Class_release_1, __ABG__args);
        }
        finally
        {
            global::AndroidBindgen.AndroidJNIEx.CheckException();
        }
    }
}
}
